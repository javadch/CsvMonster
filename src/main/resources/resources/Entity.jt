@import com.vaiona.csv.reader.*
@import com.vaiona.commons.data.*

@args() {
    String namespace,
    String BaseClassName,
    List<AttributeInfo> Attributes,
    List<AttributeInfo> Pre,
    List<AttributeInfo> Post
}

package @(namespace);

import java.text.SimpleDateFormat;
import java.util.Date;

public class @(BaseClassName)Entity {

    @for(AttributeInfo ad : Attributes) {
        public @ad.runtimeType @ad.name;
        @*
        @if(ad.runtimeType.equals("Date") || ad.runtimeType.equals("String")){
            public @ad.runtimeType @ad.name;
        } 
        else{
            public @ad.runtimeType.toLowerCase() @ad.name;
        }
        *@
    }
    public boolean isValid = true; @//set it to false if the object is not valid for any reason    
    private String[] row; @// should be a weak reference
    
    public @(BaseClassName)Entity (String[] row){
        @if(Pre.size() > 0){ // if there is no where clause, usually there is no need for a pre population, hence, the Pre is empty
            try {
                @for(AttributeInfo ad : Pre) {
                    @ad.name = @ad.forwardMapTranslated;
                }
            } catch (Exception ex) {
                isValid = false;
            }
        }
        if(isValid){
            this.row = row;
        }
       
    }
    
    public @(BaseClassName)Entity populate(){
        @// populate all other attributes and release row
        @// make the object invalid if something went wrong
        @// apply data conversion checks
        try {
            @for(AttributeInfo ad : Post) {
                @ad.name = @ad.forwardMapTranslated;
            }
        } catch (Exception ex) {
            @// Logger.getLogger(DataReaderBuilder.class.getName()).log(Level.SEVERE, null, ex);
            isValid = false;
        }
        row = null;
        return this;
    }
}
